---
# tasks file for ansible-role-nextcloud

- name: Include RAM tasks.
  include_tasks: ram.yml

- name: Include Apache tasks.
  include_tasks: apache.yml

- name: Include PHP tasks.
  include_tasks: php.yml

- name: Include database tasks tasks.
  include_tasks: "{{ nextcloud_db_type }}.yml"

- name: Clone Nextcloud repository to remote filesystem and set permissions.
  block:
    - name: Clone Nextcloud codebase.
      git:
        accept_hostkey: true
        force: "{{ nextcloud_git_force }}"
        repo: "{{ nextcloud_git_repo }}"
        dest: "{{ nextcloud_git_dest }}"
        update: "{{ nextcloud_git_update }}"
        version: "{{ nextcloud_git_repo_version | default(omit) }}"

    - name: Set correct permissions on Nextcloud directory.
      file:
        path: "{{ item }}"
        owner: "{{ nextcloud_apache_user }}"
        group: "{{ nextcloud_apache_user }}"
        state: directory
        recurse: true
      with_items:
        - "{{ nextcloud_git_dest }}"

- name: Check if Nextcloud is already installed.
  shell: "php occ status"
  args:
    chdir: "{{ nextcloud_git_dest }}"
    warn: false
  register: nextcloud_installed
  changed_when: false
  become: true
  become_user: "{{ nextcloud_apache_user }}"

- name: Run Nextcloud installer.
  shell: >
    php occ maintenance:install
    --database "{{ nextcloud_db_type }}"
    --database-name "{{ nextcloud_db_name }}"
    --database-user "{{ nextcloud_db_user }}"
    --database-pass "{{ nextcloud_db_pass }}"
    --admin-user "{{ nextcloud_admin_user }}"
    --admin-pass "{{ nextcloud_admin_pass }}"
  args:
    chdir: "{{ nextcloud_git_dest }}"
    warn: false
  no_log: true
  register: nextcloud_install_command
  become: true
  become_user: "{{ nextcloud_apache_user }}"
  when: "'installed: true' not in nextcloud_installed.stdout"

- name: Run Nextcloud configuration commands.
  block:
    - name: Ensure this is a trusted domain.
      shell: "php occ config:system:set trusted_domains {{ item.0 }} --value={{ item.1 }}"
      args:
        chdir: "{{ nextcloud_git_dest }}"
        warn: false
      with_indexed_items: "{{ nextcloud_trusted_domains }}"
      become: true
      become_user: "{{ nextcloud_apache_user }}"
      when: "'installed: true' in nextcloud_installed.stdout or nextcloud_install_command.rc == 0"

    - name: Run other Nextcloud configuration commands.
      shell: "{{ item }}"
      args:
        chdir: "{{ nextcloud_git_dest }}"
        warn: false
      with_items: "{{ nextcloud_config_commands }}"
      become: true
      become_user: "{{ nextcloud_apache_user }}"
      when: "'installed: true' in nextcloud_installed.stdout or nextcloud_install_command.rc == 0"
